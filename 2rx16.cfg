FEATURES {
    STARTADDRESS: default = $0801;
}

SYMBOLS {
    __HIMEM__:    type = weak, value = $9F00;
}

MEMORY {
    ZP:           file = "", start = $0022,  size = $0040 - $0022, define = yes;
    ZP2:          file = "", start = $00A9,  size = $0057, type = rw;
    GOLDEN:       file = "", start = $0400,  size = $0400, type = rw;
    LOADADDR:     file = %O, start = %S - 2, size = $0002;
    MAIN:         file = %O, start = %S,     size = $3FFF;
    INTRO:        file = "ROOT/INTRO.BIN", start = $4800, size = $5700;
    HEDRON:       file = "ROOT/HEDRON.BIN", start = $4800, size = $5700;
    TUNNEL:       file = "ROOT/TUNNEL.BIN", start = $4800, size = $5700;
    CIRCLES:      file = "ROOT/CIRCLES.BIN", start = $4800, size = $5700;
    MOIRE:        file = "ROOT/MOIRE.BIN", start = $4800, size = $5700;
    SCROLLER_ZP:  file = "", start = $0040,  size = $0080 - $0040, define = yes;
    SCROLLER:     file = "ROOT/SCROLLER.BIN", start = $4800, size = $5700;
    CREATURE_ZP:  file = "", start = $0040,  size = $0080 - $0040, define = yes;
    CREATURE:     file = "ROOT/CREATURE.BIN", start = $4800, size = $5700;
    PLASMA:       file = "ROOT/PLASMA.BIN", start = $4800, size = $5700;
    CUBE:         file = "ROOT/CUBE.BIN", start = $4800, size = $5700;
    BALLS:        file = "ROOT/BALLS.BIN", start = $4800, size = $5700;
    SWORD:        file = "ROOT/SWORD.BIN", start = $4800, size = $5700;
    WATER:        file = "ROOT/WATER.BIN", start = $4800, size = $5700;
    BOUNCE:       file = "ROOT/BOUNCE.BIN", start = $4800, size = $5700;
    CRAFT:        file = "ROOT/CRAFT.BIN", start = $4800, size = $5700;
    CREW:         file = "ROOT/CREW.BIN", start = $4800, size = $5700;
    CREDITS:      file = "ROOT/CREDITS.BIN", start = $4800, size = $5700;
    TUNCOORDS:    file = "ROOT/TUNCOORDS.BIN", start = $0000, size = $10000;
    HIGHRAM:      file = "", start = $A000,  size = $2000;
}

SEGMENTS {
    ZEROPAGE:       load = ZP,            type = zp;
    EXTZP:          load = ZP2,           type = zp, optional = yes;
    GOLDEN:         load = GOLDEN,        type = bss, optional = yes;
    LOADADDR:       load = LOADADDR,      type = ro;
    BASICSTUB:      load = MAIN,          type = ro;
    STARTUP:        load = MAIN,          type = ro;
    CODE:           load = MAIN,          type = ro;
    UTIL:           load = MAIN,          type = ro;
    ZSMKITLIB:      load = MAIN,          type = ro;
    RODATA:         load = MAIN,          type = ro, optional = yes;
    TILEDATA:       load = MAIN,          type = ro, optional = yes;
    DATA:           load = MAIN,          type = rw, optional = yes;
    BSS:            load = MAIN,          type = bss, define = yes;
    INTRO:          load = INTRO,         type = rw, optional = yes;
    HEDRON:         load = HEDRON,        type = rw, optional = yes;
    TUNNEL:         load = TUNNEL,        type = rw, optional = yes;
    TUNCOORDS:      load = TUNCOORDS,     type = ro, optional = yes;
    CIRCLES:        load = CIRCLES,       type = rw, optional = yes;
    MOIRE:          load = MOIRE,         type = rw, optional = yes;
    SCROLLER_ZP:    load = SCROLLER_ZP,   type = zp;
    SCROLLER:       load = SCROLLER,      type = rw, optional = yes;
    SCROLLER_BSS:   load = SCROLLER,      type = bss, define = yes;
    CREATURE_ZP:    load = CREATURE_ZP,   type = zp;
    CREATURE:       load = CREATURE,      type = rw, optional = yes;
    CREATURE_BSS:   load = CREATURE,      type = bss, define = yes;
    PLASMA:         load = PLASMA,        type = rw, optional = yes;
    CUBE:           load = CUBE,          type = rw, optional = yes;
    BALLS:          load = BALLS,         type = rw, optional = yes;
    SWORD:          load = SWORD,         type = rw, optional = yes;
    WATER:          load = WATER,         type = rw, optional = yes;
    BOUNCE:         load = BOUNCE,        type = rw, optional = yes;
    CRAFT:          load = CRAFT,         type = rw, optional = yes;
    CREW:           load = CREW,          type = rw, optional = yes;
    CREDITS:        load = CREDITS,       type = rw, optional = yes;
    ZSMKITBANK:     load = HIGHRAM,       type = ro;
}



